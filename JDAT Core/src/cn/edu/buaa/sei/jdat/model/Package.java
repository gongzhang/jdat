package cn.edu.buaa.sei.jdat.model;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : Jar Dependency Analysis Toolkit
//  @ File Name : Package.java
//  @ Date : 2012/1/13
//  @ Author : 
//
//

public class Package extends DependentNode<Package> implements Element {
	
	private String namespace;
	private List<Type> types;
	
	private Set<String> referencesNames;
	
	private Jar owner;
	
	public Package() {
		this.types = new ArrayList<Type>();
		referencesNames = new HashSet<String>();
		references = new HashSet<Package>();
		inverseReferences = new HashSet<Package>();
	}
	
	public boolean isUnknown() {
		return this.types == null;
	}
	
	public Jar getOwner() {
		return this.owner;
	}
	
	public void setOwner(Jar owner) {
		this.owner = owner;
	}
	
	public List<Type> getTypes() {
		return this.types;
	}
	
	@Override
	public String getName() {
		return this.namespace;
	}
	@Override
	public String getSignature() {
		return this.namespace;
	}
	
	@Override
	public String getSimpleSignature() {
		return this.namespace;
	}
	
	public void setName(String name) {
		this.namespace = name;
	}
	
	public void addType(Type t) {
		types.add(t);
	}
	
	public void addUnresolvedReferenceName(String name) {
		if (name.equals(this.namespace))
			return;
		this.referencesNames.add(name);
	}
	
	public String[] getUnresolvedReferenceNames() {
		return this.referencesNames.toArray(new String[0]);
	}
	
	@Override
	public void addReference(Package node) {
		String signature = node.getSignature();
		if (this.referencesNames.contains(signature)) {
			this.references.add(node);
			this.referencesNames.remove(signature);
		}
	}
	
	@Override
	public void removeReference(Package node) {
		String signature = node.getSignature();
		if (this.references.contains(node)) {
			this.referencesNames.add(signature);
			this.references.remove(node);
		}
	}
	
	private Package(String name) {
		this.setName(name);
		this.types = null;
		referencesNames = null;
		references = null;
		inverseReferences = null;
	}
	
	public static Package createUnknownPackage(String namespace) {
		return new Package(namespace);
	}
	
	public void destory() {
		types.clear();
		types = null;
		referencesNames.clear();
		referencesNames = null;
	}
}
